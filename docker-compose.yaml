version: "3.8"
services:
  goshop:
    image: github.com/ahmed-eid-faried/ecommerce-backend-golang
    build: .
    ports:
      - "8888:8888"
    environment:
      port: 8888
      auth_secret: auth_secret
      database_uri: postgres://postgres:1234@postgres:5432/postgres
      redis_uri: redis:6379
      redis_db: 0
    entrypoint: ["/app/wait-for-it.sh", "postgres:5432", "--", "./goshop"]
    depends_on:
      - postgres
      - redis

  redis:
    image: "redis:alpine"

  postgres:
    restart: always
    image: "postgres:latest"
    environment:
      DATABASE_USER: postgres
      POSTGRES_PASSWORD: 1234
# version: "3.8"
# services:
#   goshop:
#     image: github.com/ahmed-eid-faried/ecommerce-backend-golang
#     build: .
#     ports:
#       - "8888:8888"
#     environment:
#       port: 8888
#       auth_secret: auth_secret
#       database_uri: postgres://postgres:1234@postgres:5432/postgres
#       redis_uri: redis:6379
#       redis_db: 0
#     depends_on:
#       postgres:
#         condition: service_healthy
#       redis:
#         condition: service_started

#   redis:
#     image: "redis:alpine"

#   postgres:
#     restart: always
#     image: "postgres:latest"
#     environment:
#       DATABASE_USER: postgres
#       POSTGRES_PASSWORD: 1234
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# version: "3.8"
# services:
#   goshop:
#     image: github.com/ahmed-eid-faried/ecommerce-backend-golang
#     build: .
#     ports:
#       - "8888:8888"
#     environment:
#       port: 8888
#       auth_secret: auth_secret
#       database_uri: postgres://postgres:1234@postgres:5432/postgres
#       redis_uri: redis:6379
#       redis_db: 0

#     depends_on:
#       - postgres
#       - redis

#   redis:
#     image: "redis:alpine"

#   postgres:
#     restart: always
#     image: "postgres:latest"
#     environment:
#       DATABASE_USER: postgres
#       POSTGRES_PASSWORD: 1234
